apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'jacoco'

ext {
	publishedGroupId = 'com.liferay'
	libraryName = 'liferay-analytics-android'
	libraryDescription = 'Liferay Analytics for Android'

	bintrayRepo = 'liferay-mobile'
	bintrayOrg = 'liferay'

	versionCode = 100
	versionName = '1.0.0'

	siteUrl = 'https://github.com/liferay-mobile/liferay-analytics-android'
	gitUrl = 'https://github.com/liferay-mobile/liferay-analytics-android.git'

	licenseName = 'GNU Lesser General Public License, version 2.1'
	licenseUrl = 'http://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html'
	allLicenses = ['LGPL-2.1']
}

jacoco {
	toolVersion = "0.8.2-SNAPSHOT"
	reportsDir = file("$buildDir/reports")
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

	reports {
		xml.enabled = true
		html.enabled = true
	}

	def fileFilter = [ '**/R.class',
	                   '**/R$*.class',
	                   '**/BuildConfig.*',
	                   '**/Manifest*.*',
	                   '**/*Test*.*',
	                   'android/**/*.*']

	def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
	def mainSrc = "$project.projectDir/src/main/java"

	sourceDirectories = files([mainSrc])
	classDirectories = files([debugTree])
	executionData = fileTree(dir: project.buildDir, includes: [
		'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
	])
}

tasks.withType(Test) {
	jacoco.includeNoLocationClasses = true
}

android {
	compileSdkVersion 26

	defaultConfig {
		minSdkVersion 14
		targetSdkVersion 26
		versionCode 1
		versionName "1.0"

		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

	}

	buildTypes {
		debug {
			testCoverageEnabled true
		}

		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	sourceSets {
		String sharedTestDir = 'src/sharedTest/java'
		test {
			java.srcDir sharedTestDir
		}
		androidTest {
			java.srcDir sharedTestDir
		}
	}

	testOptions.unitTests.includeAndroidResources true
}

dependencies {
	testImplementation "org.mockito:mockito-inline:2.13.0"
	testImplementation group: "junit", name: "junit", version: "4.12"
	testImplementation group: "org.robolectric", name: "robolectric", version: "3.8"
	androidTestImplementation group: "com.android.support.test", name: "runner", version: "1.0.1"

	implementation group: "com.google.code.gson", name: "gson", version: "2.8.2"
	implementation group: "com.squareup.okhttp3", name: "okhttp", version: "3.10.0"
	implementation group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk7", version: "$kotlin_version"
	implementation "org.koin:koin-android:$koin_version"
	testImplementation "org.koin:koin-test:$koin_version"
}

apply from: '../bintray.gradle'
apply from: '../install.gradle'